{"modules":[{"id":"jballerina.java","description":"This module provides library operations required for Java interoperability in Ballerina. It includes a set of\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.__internal","description":"","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.annotations","description":"This module provides predefined annotations and default error type declaration.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.array","description":"The `lang.array` module corresponds to the `list` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.boolean","description":"The `lang.boolean` module corresponds to the `boolean` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.decimal","description":"The `lang.decimal` module corresponds to the `decimal` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.error","description":"The `lang.error` module corresponds to the `error` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.float","description":"The `lang.float` module corresponds to the `float` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.future","description":"The `lang.future` module corresponds to the `future` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.int","description":"The `lang.int` module corresponds to the `int` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.map","description":"The `lang.map` module corresponds to the `mapping` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.object","description":"The `lang.object` module corresponds to the `object` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.runtime","description":"The `lang.runtime` module provides functions related to the language runtime that are not specific to a particular basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.stream","description":"The `lang.stream` module corresponds to the `stream` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.string","description":"The `lang.string` module corresponds to the `string` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.table","description":"The `lang.table` module corresponds to the `table` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.transaction","description":"The `lang.transaction` module supports transactions.","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.typedesc","description":"The `lang.typedesc` module corresponds to the `typedesc` basic type. \n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.value","description":"The `lang.value` module provides functions that work on values of more than one basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"lang.xml","description":"The `lang.xml` module corresponds to the `xml` basic type.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true},{"id":"test","description":"This module facilitates writing tests for Ballerina code in a simple manner. It provides a number of capabilities such as configuring the setup and cleanup steps at different levels, ordering and grouping of tests, providing value-sets to tests, and independence from external functions and endpoints via mocking capabilities.\n","orgName":"ballerina","version":"0.0.0","isDefaultModule":true}],"classes":[{"id":"StackFrameImpl","description":"Implementation for the `runtime.StackFrame`.\n\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"__IntRange","description":"Integer range expression is implemented using `__IntRange` object.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"DefaultRetryManager","description":"The RetryManager used by default.\n","moduleId":"lang.error","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FunctionStub","description":"Represents an object that allows stubbing function invocations.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"MemberFunctionStub","description":"Represents an object that allows stubbing member function invocations.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"MemberVariableStub","description":"Represents an object that allows stubbing member variables retrieved.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"MockFunction","description":"Represents a MockFunction object.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"MockObject","description":"Represents a Mock object in which stubs for member functions and variables need to be specified.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"functions":[{"id":"cast","description":"Performs a Java cast operation on a value.\nThis casts a value describing a `JObject` to a type describing a `JObject` based on Java assignability,\nreturns an error if the cast cannot be done.\n```ballerina\nFileInputStream|error obj \u003d java:cast(inputStream);\n```\n\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"createNull","description":"Returns a `handle`, which refers to Java null.\n```ballerina\nhandle nullHandle \u003d java:createNull();\n```\n\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromString","description":"Returns a `handle`, which refers to the Java string representation of the Ballerina `string`.\n```ballerina\nhandle header \u003d java:fromString(\"Content-Type\");\n```\n\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getClass","description":"Returns a `handle`, which refers to the Java Class object associated with the class or interface with the given\nstring name.\n```ballerina\nhandle|error intClass \u003d java:getClass(\"int\");\n```\n\nThis function performs a Java `class.forName(name)` except for the following cases:\n\n| Name     |   Output                                                      |\n|:---------|:--------------------------------------------------------------|\n| boolean  |   Java Class instance representing the primitive type boolean |\n| byte     |   Java Class instance representing the primitive type byte    |\n| char     |   Java Class instance representing the primitive type char    |\n| short    |   Java Class instance representing the primitive type short   |\n| int      |   Java Class instance representing the primitive type int     |\n| long     |   Java Class instance representing the primitive type long    |\n| float    |   Java Class instance representing the primitive type float   |\n| double   |   Java Class instance representing the primitive type double  |\n\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"isNull","description":"Returns `true` if this handle refers to Java null.\n```ballerina\nboolean status \u003d java:isNull(value);\n```\n\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toString","description":"Returns a Ballerina `string` representation of the Java object referred by the `handle`.\nIf the `handle` refers to Java null, then this function returns a `nil` value.\n```ballerina\nstring? version \u003d java:toString(versionProperty);\n```\n\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"construct","description":"Takes in an iterator object and returns a new stream out of it.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"createIntRange","description":"The `createIntRange` function creates a `__IntRange` object and returns it. This function is used to replace the binary\ninteger range expression in Desugar phase.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"createRecordFromMap","description":"Constructs a record value of type `t` from the provided `v` value\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getAttribute","description":"Return attribute matching expanded attribute name.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getCompletionType","description":"Takes a typedesc of a stream and returns the typedesc of the completion type.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getConfigurableValue","description":"Get the value of the configurable variable.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getElementNameNilLifting","description":"Return name of the element if `x` is a element or nil if element name is not set, else error.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getElements","description":"Get elements matching at least one of `elemNames`.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getElementType","description":"Takes a typedesc of an array or stream and returns the typedesc of the element or constraint type.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getFilteredChildrenFlat","description":"Get childElements matching `elemNames` and childIndex for each children sequence.\nxml x \u003d xml `\u003ca\u003e\u003ca0\u003ex\u003c/a0\u003e\u003ca0\u003ey\u003c/a0\u003e\u003c/a\u003e\u003cb\u003e\u003ca0\u003ej\u003c/a0\u003e\u003ca0\u003ek\u003c/a0\u003e\u003c/b\u003e`;\nx.getFilteredChildrenFlat(0, \"a0\") \u003d\u003e \u003ca0\u003ex\u003c/a0\u003e\u003ca0\u003ej\u003c/a0\u003e\nx.getFilteredChildrenFlat(-1) \u003d\u003e \u003ca0\u003ex\u003c/a0\u003e\u003ca0\u003ey\u003c/a0\u003e\u003ca0\u003ej\u003c/a0\u003e\u003ca0\u003ek\u003c/a0\u003e\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getFilterFunc","description":"Change the given filter function\u0027s parameter to any|error and returns the same function.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getIteratorObj","description":"Takes in a stream and returns the iterator object of that stream.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getMapFunc","description":"Change the given map function\u0027s parameter to any|error and returns the same function.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getReturnType","description":"Get the return type of a given function.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"hasConfigurableValue","description":"Check whether there is a configurable variable with the given name.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"invokeAsExternal","description":"Invoke a non-isolated function as an external function (workaround for isolated invocations).\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"selectDescendants","description":"Searches in children recursively for elements matching the qualified name and returns a sequence containing them\nall. Does not search within a matched result.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"setNarrowType","description":"Sets the narrowed type of the `value`.\n\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"\u0027map","description":"Applies a function to each member of an array and returns an array of the results.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"enumerate","description":"Returns a new array consisting of index and member pairs.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"every","description":"Tests whether a function returns true for every member of an array.\n\nThe parameter `func` is called for each member of `arr` in order unless and until a call returns false.\nWhen the array is empty, returns true.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"filter","description":"Selects the members from an array for which a function returns true.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"forEach","description":"Applies a function to each member of an array.\n\nThe parameter `func` is applied to each member of parameter `arr` in order.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromBase16","description":"Returns the byte array that a string represents in Base16.\n\n`str` must consist of the characters `0..9`, `A..F`, `a..f`\nand whitespace as allowed by a Ballerina Base16Literal.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromBase64","description":"Returns the byte array that a string represents in Base64.\n\nparameter `str` must consist of the characters `A..Z`, `a..z`, `0..9`, `+`, `/`, `\u003d`\nand whitespace as allowed by a Ballerina Base64Literal.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"indexOf","description":"Returns the index of first member of an array that is equal to a given value if there is one.\nReturns `()` if not found.\nEquality is tested using `\u003d\u003d`.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"iterator","description":"Returns an iterator over an array.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"lastIndexOf","description":"Returns the index of last member of an array that is equal to a given value if there is one.\nReturns `()` if not found.\nEquality is tested using `\u003d\u003d`.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"length","description":"Returns the number of members of an array.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"pop","description":"Removes and returns the last member of an array.\n\nThe array must not be empty.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"push","description":"Adds values to the end of an array.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"reduce","description":"Combines the members of an array using a combining function.\n\nThe combining function takes the combined value so far and a member of the array,\nand returns a new combined value.\n\nFor example\n```\nreduce([1, 2, 3], function (int total, int n) returns int { return total + n; }, 0)\n```\nis the same as `sum(1, 2, 3)`.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"remove","description":"Removes a member of an array.\n\nThis removes the member of parameter `arr` with index parameter `index` and returns it.\nIt panics if there is no such member.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"removeAll","description":"Removes all members of an array.\n\nPanics if any member cannot be removed.\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"reverse","description":"Reverses the order of the members of an array.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"setLength","description":"Changes the length of an array.\n\n`setLength(arr, 0)` is equivalent to `removeAll(arr)`.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"shift","description":"Removes and returns first member of an array.\n\nThe array must not be empty.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"slice","description":"Returns a subarray using a start index (inclusive) and an end index (exclusive).\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"some","description":"Tests whether a function returns true for some member of an array.\n\nThe parameter `func` is called for each member of parameter `arr` in order unless and until a call returns true.\nWhen the array is empty, returns false.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"sort","description":"Sorts an array.\n\nIf the member type of the array is not ordered, then the parameter `key` function\nmust be specified.\nSorting works the same as with the parameter `sort` clause of query expressions.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toBase16","description":"Returns the string that is the Base16 representation of an array of bytes.\n\nThe representation is the same as used by a Ballerina Base16Literal.\nThe result will contain only characters  `0..9`, `a..f`.\nThere will be no whitespace in the returned string.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toBase64","description":"Returns the string that is the Base64 representation of an array of bytes.\n\nThe representation is the same as used by a Ballerina Base64Literal.\nThe result will contain only characters  `A..Z`, `a..z`, `0..9`, `+`, `/` and `\u003d`.\nThere will be no whitespace in the returned string.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toStream","description":"Returns a stream from the given array.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"unshift","description":"Adds values to the start of an array.\n\nThe values newly added to the array will be in the same order\nas they are in parameter `vals`.\n\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromString","description":"Converts a string to a boolean.\n\nReturns the boolean of which parameter `s` is a string representation.\nThe accepted representations are `true`, `false`\n(in any combination of lower- and upper-case),\nand also `1` for true and `0` for `false`.\nThis is the inverse of function ``value:toString`` applied to a `boolean`.\n\n","moduleId":"lang.boolean","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"abs","description":"Returns the IEEE absolute value of a decimal value.\n\n","moduleId":"lang.decimal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"ceiling","description":"Rounds a decimal up to the closest integral value.\n\n","moduleId":"lang.decimal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"floor","description":"Rounds a decimal down to the closest integral value.\n\n","moduleId":"lang.decimal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromString","description":"Returns the decimal value represented by a string.\n\n`s` must follow the syntax of DecimalFloatingPointNumber as defined by the Ballerina specification\nwith the following modifications\n- the DecimalFloatingPointLiteral may have a leading `+` or `-` sign\n- a FloatingPointTypeSuffix is not allowed\nThis is the inverse of function ``value:toString`` applied to an `decimal`.\n\n","moduleId":"lang.decimal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"max","description":"Returns the maximum of one or more decimal values.\n\n","moduleId":"lang.decimal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"min","description":"Returns the minimum of one or more decimal values.\n\n","moduleId":"lang.decimal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"quantize","description":"IEEE quantize operation.\n","moduleId":"lang.decimal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"round","description":"Round a decimal to a specified number of digits.\nReturns the decimal value that has an exponent of `-fractionDigits`\nand is closest to `x`.\nIf there are two such values, returns the one whose final digit is even\n(this is the round-to-nearest rounding mode, which is the default for IEEE\nand for Ballerina).\nA value of `fractionDigits` greater than 0 thus corresponds to the number of digits after the decimal\npoint being `fractionDigits`; a value of 0 for `fractionDigits` rounds to an integer.\nNote that IEEE 754 roundToIntegralTiesToEven operation differs from `round` with `fractionDigits` as 0, in that\nroundToIntegralTiesToEven will return a value with a positive exponent when the operand has a positive exponent.\nNote that `\u003cint\u003ex` is the same as `\u003cint\u003ex.round(0)`.\n\n","moduleId":"lang.decimal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"sum","description":"Returns the sum of zero or more decimal values.\n\n","moduleId":"lang.decimal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"cause","description":"Returns the error\u0027s cause.\n\n","moduleId":"lang.error","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"detail","description":"Returns the error\u0027s detail record.\n\nThe returned value will be immutable.\n","moduleId":"lang.error","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"message","description":"Returns the error\u0027s message.\n\n","moduleId":"lang.error","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"stackTrace","description":"Returns an object representing the stack trace of the error.\n\n","moduleId":"lang.error","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toBalString","description":"Converts an error to a string that describes the value in Ballerina syntax.\n\nThe details of the conversion are specified by the ToString abstract operation\ndefined in the Ballerina Language Specification, using the expression style.\n\n","moduleId":"lang.error","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toString","description":"Converts an error to a string.\n\nThe details of the conversion are specified by the ToString abstract operation\ndefined in the Ballerina Language Specification, using the direct style.\n\n","moduleId":"lang.error","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"abs","description":"Returns the IEEE absolute value of a float value.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"acos","description":"Returns the arccosine of a float value.\n\nCorresponds to IEEE acos operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"asin","description":"Returns the arcsine of a float value.\n\nCorresponds to IEEE asin operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"atan","description":"Returns the arctangent of a float value.\n\nCorresponds to IEEE atan operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"atan2","description":"Performs the 2-argument arctangent operation.\n\nCorresponds IEEE atan2(y, x) operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"cbrt","description":"Returns the cube root of a float value.\n\nCorresponds to IEEE rootn(x, 3) operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"ceiling","description":"Rounds a float up to the closest integral value.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"cos","description":"Returns the cosine of a float value.\n\nCorresponds to IEEE cos operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"cosh","description":"Returns the hyperbolic cosine of a float value.\n\nCorresponds to IEEE cosh operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"exp","description":"Raises Euler\u0027s number to a power.\n\nCorresponds to IEEE exp operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"floor","description":"Rounds a float down to the closest integral value.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromBitsInt","description":"Returns the float that is represented in IEEE 64-bit floating point by an int.\n\nAll bit patterns that IEEE defines to be NaNs will all be mapped to the single float NaN value.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromHexString","description":"Return the float value represented by a string.\n\nparameter `s` must follow the syntax of HexFloatingPointLiteral as defined by the Ballerina specification\nwith the following modifications\n- the HexFloatingPointLiteral may have a leading `+` or `-` sign\n- `NaN` is allowed\n- `Infinity` is allowed with an optional leading `+` or `-` sign\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromString","description":"Returns the float value represented by a string.\n\nparameter `s` must follow the syntax of DecimalFloatingPointNumber as defined by the Ballerina specification\nwith the following modifications\n- the DecimalFloatingPointNumber may have a leading `+` or `-` sign\n- `NaN` is allowed\n- `Infinity` is allowed with an optional leading `+` or `-` sign\n- a FloatingPointTypeSuffix is not allowed\nThis is the inverse of function ``value:toString`` applied to an `float`.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"isFinite","description":"Tests whether a float is finite.\n\nExactly one of isFinite, isInfinite and IsNaN will be true for any float value\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"isInfinite","description":"Tests whether a float is infinite.\n\nExactly one of isFinite, isInfinite and IsNaN will be true for any float value\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"isNaN","description":"Tests whether a float is NaN.\n\nExactly one of isFinite, isInfinite and IsNaN will be true for any float value.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"log","description":"Returns the natural logarithm of a float value.\n\nCorresponds to IEEE log operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"log10","description":"Returns the base 10 logarithm of a float value.\n\nCorresponds to IEEE log10 operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"max","description":"Returns the maximum of zero or more float values.\n\nResult is -∞ if no args\nNaN if any arg is NaN\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"min","description":"Returns the minimum of zero or more float values.\n\nResult is +∞ if no args\nResult is NaN if any arg is NaN\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"pow","description":"Raises one float value to the power of another float values.\n\nCorresponds to IEEE pow(x, y) operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"round","description":"Rounds a float value to a specified number of digits.\n\nReturns the float value that is an integral multiple of 10 raised to the power of `-fractionDigits` and closest to `x`.\nIf there are two such values, choose the one whose final digit is even\n(this is the round-to-nearest rounding mode, which is the default for IEEE and for Ballerina).\nA value of `fractionDigits` greater than 0 thus corresponds to the number of digits after the decimal\npoint being `fractionDigits`; a value of 0 for `fractionDigits` rounds to an integer.\nIf `x` is NaN, +0, -0, +∞ or -∞, then the result is `x``.\n MISSING[`]When `fractionDigits` is 0, this is\nthe same as Java Math.rint method, .NET Math.Round method and\nIEEE roundToIntegralTiesToEven operation\nNote that `\u003cint\u003ex` is the same as `\u003cint\u003ex.round(0)`.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"sin","description":"Returns the sine of a float value.\n\nCorresponds to IEEE sin operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"sinh","description":"Returns the hyperbolic sine of a float value.\n\nCorresponds to IEEE sinh operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"sqrt","description":"Returns the square root of a float value.\n\nCorresponds to IEEE squareRoot operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"sum","description":"Returns the sum of zero or more float values.\n\nResult is NaN if any arg is NaN\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"tan","description":"Returns the tangent of a float value.\n\nCorresponds to IEEE tan operation\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"tanh","description":"Returns the hyperbolic tangent of a float value.\n\nCorresponds to IEEE tanh operation.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toBitsInt","description":"Returns IEEE 64-bit binary floating point format representation of a float value as an int.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toExpString","description":"Returns a string that represents `x` using scientific notation.\nThe returned string will be in the same format used by `value:toString`,\nexcept that it will always include an exponent and there will be exactly\none digit before the decimal point.\nBut if `x` is NaN or infinite, the result will be the same as `value:toString`.\nThe digit before the decimal point will be zero only if all other digits\nare zero.\nThis will panic if fractionDigits is less than 0.\nIf `fractionDigits` is zero, there will be no decimal point.\nAny necessary rounding will use the roundTiesToEven rounding direction.\nThe exponent in the result uses lower-case `e`, followed by a `+` or `-` sign,\nfollowed by at least two digits, and only as many more digits as are needed\nto represent the result. If `x` is zero, the exponent is zero. A zero exponent\nis represented with a `+` sign.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toFixedString","description":"Returns a string that represents `x` using fixed-point notation.\nThe returned string will be in the same format used by `value:toString`,\nexcept that it will not include an exponent.\nIf `x` is NaN or infinite, the result will be the same as `value:toString`.\nThis will panic if `fractionDigits` is less than 0.\nIf `fractionDigits` is zero, there will be no decimal point.\nAny necessary rounding will use the roundTiesToEven rounding direction.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toHexString","description":"Returns a string that represents a float value as a hexadecimal floating point number.\n\nThe returned string will comply to the grammar of HexFloatingPointLiteral\nin the Ballerina spec with the following modifications:\n- it will have a leading `-` sign if negative\n- positive infinity will be represented by `Infinity`\n- negative infinity will be represented by `-Infinity`\n- NaN will be represented by `NaN`\nThe representation includes `0x` for finite numbers.\n\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"cancel","description":"Requests cancellation of a future.\n\nThis sets the cancellation flag in the strand corresponding to `f`.\nEach time that a strand yields, it will check the cancellation flag\nand terminate abnormally if the flag is set.\n","moduleId":"lang.future","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"abs","description":"Returns the absolute value of an int value.\n\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromHexString","description":"Returns the integer that a string value represents in hexadecimal.\n\nBoth uppercase A-F and lowercase a-f are allowed.\nIt may start with an optional `+` or `-` sign.\nNo `0x` or `0X` prefix is allowed.\nReturns an error if the parameter `s` is not in an allowed format.\n\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromString","description":"Returns the integer of a string that represents in decimal.\n\nReturns error if parameter `s` is not the decimal representation of an integer.\nThe first character may be `+` or `-`.\nThis is the inverse of function ``value:toString`` applied to an `int`.\n\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"max","description":"Returns the maximum of one or more int values.\n\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"min","description":"Returns the minimum of one or more int values.\n\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"sum","description":"Returns sum of zero or more int values.\n\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toHexString","description":"Returns representation of an integer as hexdecimal string.\n\nThere is no `0x` prefix. Lowercase letters a-f are used.\nNegative numbers will have a `-` prefix. No sign for\nnon-negative numbers.\n\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"\u0027map","description":"Applies a function each member of a map and returns a map of the result.\n\nThe resulting map will have the same keys as the argument map.\n\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"entries","description":"Returns a map containing [key, member] pair as the value for each key.\n\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"filter","description":"Selects the members from a map for which a function returns true.\n\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"forEach","description":"Applies a function to each member of a map.\n\nThe parameter `func` is applied to each member of parameter `m`.\n\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"get","description":"Returns the member of a map with given key.\n\nThis for use in a case where it is known that the map has a specific key,\nand accordingly panics if parameter `m` does not have a member with parameter `k` key.\n\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"hasKey","description":"Tests whether a map value has a member with a given key.\n\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"iterator","description":"Returns an iterator over a map.\n\nThe iterator will iterate over the members of the map not the keys.\nThe function `entries` can be used to iterate over the keys and members together.\nThe function `keys` can be used to iterator over just the keys.\n\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"keys","description":"Returns a list of all the keys of a map.\n\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"length","description":"Returns number of members of a map.\n\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"reduce","description":"Combines the members of a map using a combining function.\n\nThe combining function takes the combined value so far and a member of the map,\nand returns a new combined value.\n\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"remove","description":"Removes a member of a map.\n\nThis removes the member of parameter `m` with key parameter `k` and returns it.\nIt panics if there is no such member.\n\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"removeAll","description":"Removes all members of a map.\n\nThis panics if any member cannot be removed.\n\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"removeIfHasKey","description":"Removes a member of a map with a given key, if the map has member with the key.\n\nIf parameter `m` has a member with key parameter `k`, it removes and returns it;\notherwise it returns `()`.\n\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toArray","description":"Returns a list of all the members of a map.\n\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"deregisterListener","description":"Deregisters a listener from a module.\n\nThe `listener` ceases to be a module listener of the module from\nwhich this function is called.\n","moduleId":"lang.runtime","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getStackTrace","description":"Returns a stack trace for the current call stack.\n\nThe first member of the array represents the top of the call stack.\n","moduleId":"lang.runtime","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"registerListener","description":"Registers a listener object with a module.\n\nThe listener becomes a module listener of the module from which this\nfunction is called.\n\n","moduleId":"lang.runtime","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"sleep","description":"Halts the current strand for a predefined amount of time.\n\n","moduleId":"lang.runtime","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"\u0027map","description":"Applies a function to each member of a stream and returns a stream of the results.\n\n","moduleId":"lang.stream","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"close","description":"Closes a stream.\n\nThis releases any system resources being used by the stream.\nClosing a stream that has already been closed has no efffect and returns `()`.\n\n","moduleId":"lang.stream","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"filter","description":"Selects the members from a stream for which a function returns true.\n\n","moduleId":"lang.stream","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"forEach","description":"Applies a function to each member of a stream.\n\nThe parameter `func` is applied to each member of parameter `stm` stream in order.\n\n","moduleId":"lang.stream","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"iterator","description":"Returns an iterator over a stream.\n\n","moduleId":"lang.stream","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"next","description":"Returns the next element in the stream wrapped in a record or () if the stream ends.\n\n","moduleId":"lang.stream","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"reduce","description":"Combines the members of a stream using a combining function.\n\nThe combining function takes the combined value so far and a member of the stream,\nand returns a new combined value.\n\n","moduleId":"lang.stream","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"\u0027join","description":"Joins zero or more strings together with a separator.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"codePointCompare","description":"Lexicographically compares strings using their Unicode code points.\n\nThis orders strings in a consistent and well-defined way,\nbut the ordering will often not be consistent with cultural expectations\nfor sorted order.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"concat","description":"Concatenates zero or more strings.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"endsWith","description":"Tests whether a string ends with another string.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"equalsIgnoreCaseAscii","description":"Tests whether two strings are the same, ignoring the case of ASCII characters.\n\nA character in the range a-z is treated the same as the corresponding character in the range A-Z.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromBytes","description":"Constructs a string from its UTF-8 representation in bytes.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromCodePointInt","description":"Constructs a single character string from a code point.\n\nAn int is a valid code point if it is in the range 0 to 0x10FFFF inclusive,\nbut not in the range 0xD800 or 0xDFFF inclusive.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromCodePointInts","description":"Constructs a string from an array of code points.\n\nAn int is a valid code point if it is in the range 0 to 0x10FFFF inclusive,\nbut not in the range 0xD800 or 0xDFFF inclusive.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getCodePoint","description":"Returns the code point of a character in a string.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"includes","description":"Tests whether a string includes another string.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"indexOf","description":"Finds the first occurrence of one string in another string.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"iterator","description":"Returns an iterator over the string.\n\nThe iterator will yield the substrings of length 1 in order.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"lastIndexOf","description":"Finds the last occurrence of one string in another string.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"length","description":"Returns the length of the string.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"padEnd","description":"Adds padding to the end of a string.\nAdds sufficient `padChar` characters to the end of `str` to make its length be `len`.\nIf the length of `str` is \u003e\u003d `len`, returns `str`.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"padStart","description":"Adds padding to the start of a string.\nAdds sufficient `padChar` characters at the start of `str` to make its length be `len`.\nIf the length of `str` is \u003e\u003d `len`, returns `str`.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"padZero","description":"Pads a string with zeros.\nThe zeros are added at the start of the string, after a `+` or `-` sign if there is one.\nSufficient zero characters are added to `str` to make its length be `len`.\nIf the length of `str` is \u003e\u003d `len`, returns `str`.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"startsWith","description":"Tests whether a string starts with another string.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"substring","description":"Returns a substring of a string.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toBytes","description":"Represents a string as an array of bytes using UTF-8.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toCodePointInt","description":"Converts a single character string to a code point.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toCodePointInts","description":"Converts a string to an array of code points.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toLowerAscii","description":"Converts occurrences of A-Z to a-z.\n\nOther characters are left unchanged.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toUpperAscii","description":"Converts occurrences of a-z to A-Z.\n\nOther characters are left unchanged.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"trim","description":"Removes ASCII white space characters from the start and end of a string.\n\nThe ASCII white space characters are 0x9...0xD, 0x20.\n\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"\u0027map","description":"Applies a function to each member of a table and returns a table of the result.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"add","description":"Adds a member to a table.\n\nIt will be added as the last member.\nIt panics if parameter `val` has the same key as an existing member of parameter `t`,\nor if parameter `val` is inconsistent with the inherent type of `t`.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"filter","description":"Selects the members from a table for which a function returns true.\n\nThe resulting table will have the same keys as the argument table.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"forEach","description":"Applies a function to each member of a table.\n\nThe parameter `func` is applied to each member of parameter `t`.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"get","description":"Returns the member of an table with a particular key.\n\nThis for use in a case where it is known that the table has a specific key,\nand accordingly panics if parameter `t` does not have a member with key parameter `k`.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"hasKey","description":"Tests whether a table has a member with a particular key.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"iterator","description":"Returns an iterator over a table.\n\nThe iterator will iterate over the members of the table not the keys.\nThe `entries` function can be used to iterate over the keys and members together.\nThe `keys` function can be used to iterator over just the keys.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"keys","description":"Returns a list of all the keys of a table.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"length","description":"Returns number of members of a table.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"nextKey","description":"Returns the next available integer key.\n\nThis is maximum used key value + 1, or 0 if no key used\nXXX should it be 0, if the maximum used key value is \u003c 0?\nProvides similar functionality to auto-increment\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"put","description":"Adds a member to a table value, replacing any member with the same key value.\n\nIf parameter `val` replaces an existing member, it will have the same position\nin the order of the members as the existing member;\notherwise, it will be added as the last member.\nIt panics if parameter `val` is inconsistent with the inherent type of parameter `t`.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"reduce","description":"Combines the members of a table using a combining function.\n\nThe combining function takes the combined value so far and a member of the table,\nand returns a new combined value.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"remove","description":"Removes a member of a table.\n\nThis removed the member of parameter `t` with key parameter `k` and returns it.\nIt panics if there is no such member.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"removeAll","description":"Removes all members of a table.\n\nThis panics if any member cannot be removed.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"removeIfHasKey","description":"Removes a member of a table with a given key, if the table has member with the key.\n\nIf parameter `t` has a member with key parameter `k`, it removes and returns it;\notherwise it returns `()`.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toArray","description":"Returns a list of all the members of a table.\n\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getData","description":"Retrieves data associated with the current transaction branch.\n\nThe data is set using `setData`.\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getInfo","description":"Returns information about the transaction with the specified xid.\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getRollbackOnly","description":"Tells whether it is known that the transaction will be rolled back.\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"info","description":"Returns information about the current transaction.\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"onCommit","description":"Adds a handler to be called if and when the global transaction commits.\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"onRollback","description":"Adds a handler to be called if and when the global transaction rolls back.\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"prepareError","description":"Log and prepare `error` as a `Error`.\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"setData","description":"Associates some data with the current transaction branch.\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"setRollbackOnly","description":"Prevents the global transaction from committing successfully.\n\nThis ask the transaction manager that when it makes the decision\nwhether to commit or rollback, it should decide to rollback.\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"typeIds","description":"Returns the type-ids induced by a typedesc value.\n","moduleId":"lang.typedesc","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"clone","description":"Returns a clone of a value.\n\nA clone is a deep copy that does not copy immutable subtrees.\nA clone can therefore safely be used concurrently with the original.\nIt corresponds to the Clone(v) abstract operation,\ndefined in the Ballerina Language Specification.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"cloneReadOnly","description":"Returns a clone of a value that is read-only, i.e., immutable.\n\nIt corresponds to the ImmutableClone(v) abstract operation,\ndefined in the Ballerina Language Specification.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"cloneWithType","description":"Constructs a value with a specified type by cloning another value.\n\nWhen parameter `v` is a structural value, the inherent type of the value to be constructed\ncomes from parameter `t`. When parameter `t` is a union, it must be possible to determine which\nmember of the union to use for the inherent type by following the same rules\nthat are used by list constructor expressions and mapping constructor expressions\nwith the contextually expected type. If not, then an error is returned.\nThe `cloneWithType` operation is recursively applied to each member of parameter `v` using\nthe type descriptor that the inherent type requires for that member.\n\nLike the Clone abstract operation, this does a deep copy, but differs in\nthe following respects:\n- the inherent type of any structural values constructed comes from the specified\ntype descriptor rather than the value being constructed\n- the read-only bit of values and fields comes from the specified type descriptor\n- the graph structure of `v` is not preserved; the result will always be a tree;\nan error will be returned if `v` has cycles\n- immutable structural values are copied rather being returned as is; all\nstructural values in the result will be mutable.\n- numeric values can be converted using the NumericConvert abstract operation\n- if a record type descriptor specifies default values, these will be used\nto supply any missing members\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"ensureType","description":"Safely casts a value to a type.\n\nThis casts a value to a type in the same way as a type cast expression,\nbut returns an error if the cast cannot be done, rather than panicking.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromBalString","description":"Parses and evaluates a subset of Ballerina expression syntax.\n\nThe subset of Ballerina expression syntax supported is that produced\nby toBalString when applied to an anydata value.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromJsonDecimalString","description":"Parses a string in JSON format, using decimal to represent numbers.\n\nReturns an error if the string cannot be parsed.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromJsonFloatString","description":"Parses a string in JSON format, using float to represent numbers.\n\nReturns an error if the string cannot be parsed.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromJsonString","description":"Parses a string in JSON format and returns the the value that it represents.\n\nNumbers in the JSON string are converted into Ballerina values of type\ndecimal except in the following two cases:\nif the JSON number starts with `-` and is numerically equal to zero, then it is\nconverted into float value of `-0.0`;\notherwise, if the JSON number is syntactically an integer and is in the range representable\nby a Ballerina int, then it is converted into a Ballerina int.\nA JSON number is considered syntactically an integer if it contains neither\na decimal point nor an exponent.\n\nReturns an error if the string cannot be parsed.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromJsonStringWithType","description":"Converts a string in JSON format to a user-specified type.\n\nThis is a combination of function `fromJsonString` followed by function `fromJsonWithType`.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromJsonWithType","description":"Converts a value of type json to a user-specified type.\n\nThis works the same as function `cloneWithType`,\nexcept that it also does the inverse of the conversions done by `toJson`.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"isReadOnly","description":"Tests whether a value is read-only, i.e., immutable.\n\nReturns true if read-only, false otherwise.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"mergeJson","description":"Merges two `json` values.\n\nThe merge of parameter `j1` with parameter `j2` is defined as follows:\n- if parameter `j1` is `()`, then the result is parameter `j2`\n- if parameter `j2` is `()`, then the result is parameter `j1`\n- if parameter `j1` is a mapping and parameter `j2` is a mapping, then for each entry [k, j] in parameter `j2`, set `j1[k]` to the merge of `j1[k]` with `j`\n- if `j1[k]` is undefined, then set `j1[k]` to `j`\n- if any merge fails, then the merge of parameter `j1` with parameter `j2` fails\n- otherwise, the result is parameter `j1`.\n- otherwise, the merge fails\nIf the merge fails, then parameter `j1` is unchanged.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toBalString","description":"Converts a value to a string that describes the value in Ballerina syntax.\n\nIf parameter `v` is anydata and does not have cycles, then the result will\nconform to the grammar for a Ballerina expression and when evaluated\nwill result in a value that is \u003d\u003d to parameter `v`.\n\nThe details of the conversion are specified by the ToString abstract operation\ndefined in the Ballerina Language Specification, using the expression style.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toJson","description":"Converts a value of type `anydata` to `json`.\n\nThis does a deep copy of parameter `v` converting values that do\nnot belong to json into values that do.\nA value of type `xml` is converted into a string as if\nby the `toString` function.\nA value of type `table` is converted into a list of\nmappings one for each row.\nThe inherent type of arrays in the return value will be\n`json[]` and of mappings will be `map\u003cjson\u003e`.\nA new copy is made of all structural values, including\nimmutable values.\nThis panics if parameter `v` has cycles.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toJsonString","description":"Returns the string that represents a anydata value in JSON format.\n\nparameter `v` is first converted to `json` as if by the function `toJson`.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"toString","description":"Performs a direct conversion of a value to a string.\n\nThe conversion is direct in the sense that when applied to a value that is already\na string it leaves the value unchanged.\n\nThe details of the conversion are specified by the ToString abstract operation\ndefined in the Ballerina Language Specification, using the direct style.\n\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"\u0027map","description":"Applies a function to each item in an xml sequence, and returns an xml sequence of the results.\n\nEach item is represented as a singleton value.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"children","description":"Returns the children of elements in an xml value.\n\nWhen parameter `x` is of type `Element`, it is equivalent to function `getChildren`.\nThis is equivalent to `elements(x).map(getChildren)`.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"concat","description":"Concatenates xml and string values.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"createComment","description":"Creates a new xml comment item.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"createElement","description":"Creates a new xml element item.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"createProcessingInstruction","description":"Creates a new xml processing instruction item.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"createText","description":"Constructs an xml value of type Text.\n\nThe constructed sequence will be empty when the length of parameter `data` is zero.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"data","description":"Returns a string with the character data of an xml value.\n\nThe character data of an xml value is as follows:\n* the character data of a text item is a string with one character for each\ncharacter information item represented by the text item;\n* the character data of an element item is the character data of its children;\n* the character data of a comment item is the empty string;\n* the character data of a processing instruction item is the empty string;\n* the character data of an empty xml sequence is the empty string;\n* the character data of the concatenation of two xml sequences x1 and x2 is the\nconcatenation of the character data of x1 and the character data of x2.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"elementChildren","description":"Selects element children of an xml value.\n\nThis is equivalent to `children(x).elements(nm)`.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"elements","description":"Selects elements from an xml value.\n\nIf parameter `nm` is `()`, selects all elements;\notherwise, selects only elements whose expanded name is parameter `nm`.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"filter","description":"Selects the items from an xml sequence for which a function returns true.\n\nEach item is represented as a singleton value.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"forEach","description":"Applies a function to each item in an xml sequence.\n\nEach item is represented as a singleton value.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"fromString","description":"Constructs an xml value from a string.\n\nThis parses the string using the `content` production of the\nXML 1.0 Recommendation.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"get","description":"Returns the item of an xml sequence with given index.\n\nThis differs from `x[i]` in that it panics if\nparameter `x` does not have an item with index parameter `i`.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getAttributes","description":"Returns the map representing the attributes of an xml element.\n\nThis includes namespace attributes.\nThe keys in the map are the expanded names of the attributes.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getChildren","description":"Returns the children of an xml element.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getContent","description":"Returns the content of a processing instruction or comment item.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getDescendants","description":"Returns the descendants of an xml element.\n\nThe descendants of an element are the children of the element\ntogether with, for each of those children that is an element,\nthe descendants of that element, ordered so that\neach element immediately precedes all its descendants.\nThe order of the items in the returned sequence will thus correspond\nto the order in which the first character of the representation\nof the item would occur in the representation of the element in XML syntax.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getName","description":"Returns a string giving the expanded name of an xml element.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"getTarget","description":"Returns the target part of the processing instruction.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"iterator","description":"Returns an iterator over the xml items of an xml sequence.\n\n# Each item is represented by an xml singleton.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"length","description":"Returns number of xml items in an xml value.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"setChildren","description":"Sets the children of an xml element.\n\nThis panics if it would result in the element structure\nbecoming cyclic.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"setName","description":"Changes the name of an XML element.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"slice","description":"Returns a subsequence of an xml value.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"strip","description":"Strips the insignificant parts of the an xml value.\n\nComment items, processing instruction items are considered insignificant.\nAfter removal of comments and processing instructions, the text is grouped into\nthe biggest possible chunks (i.e., only elements cause division into multiple chunks)\nand a chunk is considered insignificant if the entire chunk is whitespace.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"text","description":"Selects all the items in a sequence that are of type `xml:Text`.\n\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"assertEquals","description":"Asserts whether the given values are equal. If it is not, an AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n@test:Config {}\n function testAssertIntEquals() {\n     int answer \u003d intAdd(5, 3);\n     test:assertEquals(answer, 8, msg \u003d \"IntAdd function failed\");\n }\n function intAdd(int a, int b) returns (int) {\n     return (a + b);\n }\n```\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"assertExactEquals","description":"Asserts whether the given values are exactly equal. If it is not, an AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n class Person {\n     public string name \u003d \"\";\n     public int age \u003d 0;\n     public Person? parent \u003d ();\n     private string email \u003d \"default@abc.com\";\n     string address \u003d \"No 20, Palm grove\";\n }\n @test:Config {}\n function testAssertExactEqualsObject() {\n     Person p1 \u003d new;\n     Person p2 \u003d p1;\n     test:assertExactEquals(p1, p2, msg \u003d \"Objects are not exactly equal\");\n }\n```\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"assertFail","description":"Assert failure is triggered based on your discretion. AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n @test:Config {}\n function foo() {\n     error? e \u003d trap bar(); // Expecting `bar()` to panic\n     if (e is error) {\n         test:assertEquals(e.message().toString(), \"Invalid Operation\", msg \u003d \"Invalid error reason\");\n     } else {\n         test:assertFail(msg \u003d \"Expected an error\");\n     }\n }\n function bar() {\n     panic error(\"Invalid Operation\");\n }\n```\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"assertFalse","description":"Asserts whether the given condition is false. If it is not, a AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n @test:Config {}\n function testAssertFalse() {\n     boolean value \u003d false;\n     test:assertFalse(value, msg \u003d \"AssertFalse failed\");\n }\n```\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"assertNotEquals","description":"Asserts whether the given values are not equal. If it is equal, an AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n @test:Config {}\n function testAssertIntEquals() {\n     int answer \u003d intAdd(5, 3);\n     test:assertNotEquals(answer, 8, msg \u003d \"Matches\");\n }\n function intAdd(int a, int b) returns (int) {\n     return (a + b);\n }\n```\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"assertNotExactEquals","description":"Asserts whether the given values are not exactly equal. If it is equal, an AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\nclass Person {\n     public string name \u003d \"\";\n     public int age \u003d 0;\n     public Person? parent \u003d ();\n     private string email \u003d \"default@abc.com\";\n     string address \u003d \"No 20, Palm grove\";\n }\n @test:Config {}\n function testAssertNotExactEqualsObject() {\n     Person p1 \u003d new;\n     Person p2 \u003d new ();\n     test:assertNotExactEquals(p1, p2, msg \u003d \"Objects are exactly equal\");\n }\n```\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"assertTrue","description":"Asserts whether the given condition is true. If it is not, a AssertError is thrown with the given errorMessage.\n\n### Example\n```ballerina\nimport ballerina/test;\n @test:Config {}\n function testAssertTrue() {\n     boolean value \u003d false;\n     test:assertTrue(value, msg \u003d \"AssertTrue failed\");\n }\n```\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"createBallerinaError","description":"Creates an `AssertError` with the custom message and category.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"mock","description":"Creates a mock object of provided type description.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"prepare","description":"Prepares a provided default mock object for stubbing.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"when","description":"Objects and functions related to function mocking\nAllows a function to stub.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"records":[{"id":"ArrayType","description":"Represents a Java array type. It is used to specify the parameter types in the `java:Constructor` and `java:Method`\nannotations.\n\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"ConstructorData","description":"Describes a Java constructor. If the `paramTypes` field is not specified, then the parameter types are inferred from\nthe corresponding Ballerina function.\n\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FieldData","description":"Describes a Java field.\n\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"MethodData","description":"Describes a Java method. If the `paramTypes` field is not specified, then the parameter types are inferred from the\ncorresponding Ballerina function.\n\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"ObjectData","description":"Describes a Java class that corresponds to a Ballerina object.\n\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"StrandData","description":"Describes Strand execution details for the runtime.\n\n","moduleId":"lang.annotations","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Detail","description":"The type to which error detail records must belong.\n","moduleId":"lang.error","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"InfoInternal","description":"Internally used record to hold information about a transaction.\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"ModuleId","description":"A record representing an identifier for a module.\nThis uniquely identifies a module within a program.\n","moduleId":"lang.typedesc","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"TypeId","description":"A record representing a type-id.\nA type-id uniquely identifies an occurrence of a distinct type descriptor\nwithin a program.\n","moduleId":"lang.typedesc","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"AfterGroupsConfig","description":"Configuration set for AfterGroups functions.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"AfterSuiteConfig","description":"Configuration set for AfterSuite functions.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"BeforeGroupsConfig","description":"Configuration set for BeforeGroups functions.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"MockConfig","description":"Configuration of the function to be mocked.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"TestConfig","description":"Configuration set for test functions.\n\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"constants":[{"id":"E","description":"Euler\u0027s number.\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Infinity","description":"IEEE positive infinity.\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"NaN","description":"IEEE not-a-number value.\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"PI","description":"The number π.\n","moduleId":"lang.float","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"MAX_VALUE","description":"Maximum value of type `int`.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"MIN_VALUE","description":"Minimum value of type `int`.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"SIGNED16_MAX_VALUE","description":"Maximum value of type `Signed16`.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"SIGNED16_MIN_VALUE","description":"Minimum value of type `Signed16`.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"SIGNED32_MAX_VALUE","description":"Maximum value of type `Signed32`.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"SIGNED32_MIN_VALUE","description":"Minimum value of type `Signed32`.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"SIGNED8_MAX_VALUE","description":"Maximum value of type `Signed8`.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"SIGNED8_MIN_VALUE","description":"Minimum value of type `Signed8`.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"UNSIGNED16_MAX_VALUE","description":"Maximum value of type `Unsigned16`.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"UNSIGNED32_MAX_VALUE","description":"Maximum value of type `Unsigned32`.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"UNSIGNED8_MAX_VALUE","description":"Maximum value of type `Unsigned8`.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"base","description":"The expanded name of the `xml:base` attribute.\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"lang","description":"The expanded name of the `xml:lang` attribute.\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"space","description":"The expanded name of the `xml:space` attribute.\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"XML_NAMESPACE_URI","description":"The namespace URI bound to the `xml` prefix.\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"XMLNS_NAMESPACE_URI","description":"The namespace URI bound to the `xmlns` prefix.\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"ANY","description":"Represents the placeholder to be given for object or record type arguments.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FUNCTION_CALL_ERROR","description":"Represents the reason for function mocking related errors.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FUNCTION_NOT_FOUND_ERROR","description":"Represents the reason for the non-existing member function related errors.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FUNCTION_SIGNATURE_MISMATCH_ERROR","description":"Represents the reason for the function signature related errors.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"INVALID_MEMBER_FIELD_ERROR","description":"Represents the reason for the object member field related errors.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"INVALID_OBJECT_ERROR","description":"Represents the reason for the mock object related errors.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"errors":[{"id":"JavaClassNotFoundError","description":"Represents a `JavaError` with the message and the cause.\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"\u0027error","description":"Default error type.\nThe type parameter is for the error detail type. It\u0027s constrained to Cloneable type.\n","moduleId":"lang.annotations","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Retriable","description":"A type of error which can be retried.\n","moduleId":"lang.error","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"ErrorType","description":"A type parameter that is a subtype of `error`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.stream","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Error","description":"Type of error returned by commit action.\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Error","description":"Represents mocking related errors.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FunctionCallError","description":"Represents an error during function call for mocking.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FunctionNotFoundError","description":"Represents an error where the function to be mocked cannot be found.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FunctionSignatureMismatchError","description":"Represents an error where the mock function contains a signature mismatch with the function to be mocked.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"InvalidMemberFieldError","description":"Represents an error where object member field is invalid.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"InvalidObjectError","description":"Represents an error where the object trying to be mocked is not valid.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"types":[{"id":"Class","description":"Represents a Java class name.\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Identifier","description":"Represents a Java identifier.\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Type","description":"A type parameter that is a subtype of `any|error`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Type1","description":"A type parameter that is a subtype of `any|error`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.__internal","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"\u0027anydata","description":"Denotes anydata type.\n","moduleId":"lang.annotations","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"\u0027json","description":"Denotes json type.\n","moduleId":"lang.annotations","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Thread","description":"","moduleId":"lang.annotations","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"AnydataType","description":"A type parameter that is a subtype of `anydata|error`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"OrderedType","description":"Any ordered type is a subtype of this.\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Type","description":"A type parameter that is a subtype of `any|error`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Type1","description":"A type parameter that is a subtype of `any|error`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Cloneable","description":"Type for value that can be cloned.\nThis is the same as in lang.value, but is copied here to avoid a dependency.\n","moduleId":"lang.error","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"DetailType","description":"A type parameter that is a subtype of error `Detail` record type.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.error","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Signed16","description":"Built-in subtype that allows non-negative integers that can be represented in 16 bits using two\u0027s complement.\nThis allows an int between -2^15 and 2^15 - 1 inclusive,\ni.e., between -32,768 and 32,767 inclusive.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Signed32","description":"Built-in subtype that allows signed integers that can be represented in 32 bits using two\u0027s complement.\nThis allows an int between -2^31 and 2^31 - 1 inclusive,\ni.e., between -2,147,483,648 and 2,147,483,647 inclusive.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Signed8","description":"Built-in subtype that allows non-negative integers that can be represented in 8 bits using two\u0027s complement.\nThis allows an int between -2^7 and 2^7 - 1 inclusive,\ni.e., between -128 and 127 inclusive.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Unsigned16","description":"Built-in subtype that allows non-negative integers that can be represented in 16 bits.\nThis allows an int between 0 and 2^16 - 1 inclusive,\ni.e., between 0 and 65,535 inclusive.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Unsigned32","description":"Built-in subtype that allows non-negative integers that can be represented in 32 bits.\nThis allows an int between 0 and 2^32 - 1 inclusive,\ni.e., between 0 and 4,294,967,295 inclusive.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Unsigned8","description":"Built-in subtype that allows non-negative integers that can be represented in 8 bits.\nThis allows an int between 0 and 2^8 - 1 inclusive,\ni.e., between 0 and 255 inclusive.\nThis is the same as `byte`.\n","moduleId":"lang.int","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Type","description":"A type parameter that is a subtype of `any|error`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Type1","description":"A type parameter that is a subtype of `any|error`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.map","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Type","description":"A type parameter that is a subtype of `any|error`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.stream","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Type1","description":"A type parameter that is a subtype of `any|error`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.stream","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Char","description":"Built-in subtype of string containing strings of length 1.\n","moduleId":"lang.string","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"KeyType","description":"A type parameter that is a subtype of `anydata`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Type","description":"A type parameter that is a subtype of `any|error`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.table","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"CommitHandler","description":"Type of a commit handler function.\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Info","description":"Information about a transaction that does not change\nafter the transaction is started.\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"RollbackHandler","description":"Type of a rollback handler function.\n\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"AnydataType","description":"A type parameter that is a subtype of `anydata`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Cloneable","description":"The type of value to which `clone` and `cloneReadOnly` can be applied.\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"CloneableType","description":"A type parameter that is a subtype of `Cloneable`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"JsonDecimal","description":"Subtype of `json` that allows only decimal numbers.\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"JsonFloat","description":"Subtype of `json` that allows only float numbers.\n","moduleId":"lang.value","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Comment","description":"Type for singleton comments.\nBuilt-in subtype of xml.\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Element","description":"Type for singleton elements.\nBuilt-in subtype of xml.\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"ItemType","description":"A type parameter that is a subtype of any singleton or empty xml sequence.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"ProcessingInstruction","description":"Type for singleton processing instructions.\nBuilt-in subtype of xml.\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Text","description":"Type for zero or more text characters.\nBuilt-in subtype of xml.\nAdjacent xml text items are automatically concatenated,\nso an xml sequence belongs to this type if it is a singleton test sequence\nor the empty sequence.\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"XmlType","description":"A type parameter that is a subtype of `xml`.\nHas the special semantic that when used in a declaration\nall uses in the declaration must refer to same type.\n","moduleId":"lang.xml","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"clients":[],"listeners":[],"annotations":[{"id":"Binding","description":"Describes the Java class representing a Ballerina binding.\n```ballerina\n@java:Binding {\n  \u0027class: \"java.io.File\"\n}\n```\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Constructor","description":"Describes a Java constructor, which provides an implementation of a Ballerina function of which the body is marked as\n`external`. If the Ballerina function body is marked as `external`, it means that the implementation of the\nfunction is not provided in the Ballerina source module.\n\nThe following code snippet shows an example usage of this annotation. Here, the `newJavaLinkedList` Ballerina function\u0027s\nimplementation is provided by the default constructor of the `java.util.LinkedList` class.\n```ballerina\nfunction newJavaLinkedList() returns handle \u003d @java:Constructor {\n     \u0027class: \"java.util.LinkedList\"\n} external;\n```\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FieldGet","description":"Describes a Java Field access, which provides an implementation of a Ballerina function of which the body is marked as\n`external`.\n```ballerina\nfunction getError() returns handle \u003d @java:FieldGet {\n    name:\"err\",\n    \u0027class:\"java/lang/System\"\n} external;\n```\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"FieldSet","description":"Describes a Java Field mutate, which provides an implementation of a Ballerina function of which the body is marked as\n`external`.\n```ballerina\nfunction setContractId(handle contractId) \u003d @java:FieldSet {\n  name:\"contractId\",\n  \u0027class:\"org/lang/impl/JavaFieldAccessMutate\"\n} external;\n```\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Method","description":"Describes a Java method, which provides an implementation of a Ballerina function of which the body is marked as\n`external`. If the Ballerina function body is marked as `external`, it means that the implementation of the\nfunction is not provided in the Ballerina source module.\n\nThe following code snippet shows an example usage of this annotation. Here, the `getUUID` Ballerina function\u0027s\nimplementation is provided by the `java.util.UUID.randomUUID` static method.\n```ballerina\nfunction getUUID() returns handle \u003d @java:Method {\n    name: \"randomUUID\",\n    \u0027class: \"java.util.UUID\"\n} external;\n```\nThe `name` field is optional. If it is not provided, the name of the Java method is inferred\nfrom the Ballerina function.\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"builtinSubtype","description":"Denotes annotated type is a builtin sub type.\n","moduleId":"lang.annotations","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"deprecated","description":"An annotation that marks a program element as deprecated.\n\nThe usage of a deprecated program element is not recommended due to\nvarious reasons. Hence, the compiler issues a warning when such an element is used.\n","moduleId":"lang.annotations","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"display","description":"Denotes general-purpose metadata to customize how Ballerina symbols are displayed in a UI environment.\n","moduleId":"lang.annotations","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"isolatedParam","description":"Denotes that the annotated parameter expects an `isolated` value when used in an `isolated` context.\n","moduleId":"lang.annotations","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"strand","description":"Denotes new Strand execution semantics.\n","moduleId":"lang.annotations","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"tainted","description":"Denotes that the return value is tainted.\n","moduleId":"lang.annotations","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"typeParam","description":"Denotes that the annotated type is a parametric type.\n","moduleId":"lang.annotations","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"untainted","description":"Denotes untaintedness.\n\nWhen used on a return type descriptor, denotes that the return value is untainted.\nWhen used on a parameter, denotes that the parameter expects an untainted value as the argument.\nWhen used in a type cast, denotes that the resultant value is untainted.\nWhen used on a listener declaration, denotes that the listener produces untainted values as arguments to the resource and remote methods.\n","moduleId":"lang.annotations","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"AfterEach","description":"Identifies afterTest function.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"AfterGroups","description":"Identifies afterGroup function.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"AfterSuite","description":"Identifies afterSuite function.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"BeforeEach","description":"Identifies beforeTest function.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"BeforeGroups","description":"Identifies beforeGroup function.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"BeforeSuite","description":"Identifies beforeSuite function.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Config","description":"Identifies test function.\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Mock","description":"Identifies the MockFunction object\n","moduleId":"test","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"objectTypes":[{"id":"JObject","description":"The Ballerina abstract object which is to be extended by Ballerina\nobjects representing Ballerina bindings for Java classes.\n\n","moduleId":"jballerina.java","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"RetryManager","description":"The type to allow control over retries performed \nby the `retry` statement and `retry transaction` statement.\n","moduleId":"lang.error","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"StackFrame","description":"Type representing a stack frame.\nA call stack is represented as an array of stack frames.\nThis type is also present in lang.runtime to avoid a dependency.\n","moduleId":"lang.error","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Iterable","description":"Distinct Iterable type.\n\nAn object can make itself iterable by using `*object:Iterable;`,\nand then defining an `iterator` method.\n","moduleId":"lang.object","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"RawTemplate","description":"Distinct RawTemplate type.\nA raw template expression constructs an object belonging to this type.\n","moduleId":"lang.object","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"DynamicListener","description":"A listener that is dynamically registered with a module.\n","moduleId":"lang.runtime","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"StackFrame","description":"Type representing a stack frame.\n\nA call stack is represented as an array of stack frames.\nThis type is also present in lang.error to avoid a dependency.\n","moduleId":"lang.runtime","moduleOrgName":"ballerina","moduleVersion":"0.0.0"},{"id":"Timestamp","description":"An instant in time.\n","moduleId":"lang.transaction","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}],"enums":[{"id":"SortDirection","description":"Direction for `sort` function.\n","moduleId":"lang.array","moduleOrgName":"ballerina","moduleVersion":"0.0.0"}]}